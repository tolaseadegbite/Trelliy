<%= search_form_for @q, url: follow_up_tasks_path, method: :get, class: "bg-surface border rounded-md p-4 mbe-4" do |f| %>
    <div class="grid grid-cols-1 grid-cols-3@md gap-4">

      <%# 1. The Omni-Search Bar %>
      <div class="col-span-1 col-span-2@md">
        <%= f.label :contact_first_name_or_contact_last_name_or_contact_email_or_event_name_cont, "Search", class: "text-sm font-medium" %>
        <%= f.search_field :contact_first_name_or_contact_last_name_or_contact_email_or_event_name_cont,
                           class: "input i-full mbs-2",
                           placeholder: "Search by name, email, or event..." %>
      </div>

      <%# 2. The Event Filter Dropdown %>
      <div>
        <%= f.label :event_id_eq, "Filter by Event", class: "text-sm font-medium" %>
        <%= f.collection_select :invitation_event_id_eq,
                          @filterable_events,
                          :id,
                          :name,
                          { include_blank: 'All Events' },
                          { class: "i-full mbs-2", data: { controller: "combobox" } } %>
      </div>
    </div>

    <%# --- FILTER LINK LOGIC --- %>
    <%
      # This logic to build the base parameters is correct.
      base_params = params.fetch(:q, {}).except(:due_at_lt, :due_at_gteq, :due_at_lteq, :page).permit!
      
      # Helper variables to determine the active state.
      q_params = params.fetch(:q, {})
      is_all_active = !q_params.key?("due_at_lt") && !q_params.key?("due_at_gteq")
      is_overdue_active = q_params.key?("due_at_lt")
      is_today_active = q_params.key?("due_at_gteq")
    %>

    <div class="flex items-center gap mbs-2 pbs-4">
      <p class="text-sm font-medium">Show:</p>

      <%# Conditionally add `btn--primary` if this is the active filter, otherwise use `btn--secondary`. %>
      <%= link_to "All", follow_up_tasks_path(q: base_params),
                  class: "btn #{is_all_active ? 'btn--primary' : 'btn--secondary border border-main'}" %>
      
      <%= link_to "Overdue", follow_up_tasks_path(q: base_params.merge(due_at_lt: Time.current)),
                  class: "btn text-negative #{is_overdue_active ? 'btn--primary' : 'btn--secondary border border-main'}" %>

      <%= link_to "Due Today", follow_up_tasks_path(q: base_params.merge(
                                                        due_at_gteq: Time.current.beginning_of_day,
                                                        due_at_lteq: Time.current.end_of_day
                                                      )),
                  class: "btn #{is_today_active ? 'btn--primary' : 'btn--secondary border border-main'}" %>
    </div>
    
    <%# --- Form Action Buttons --- %>
    <div class="flex items-center justify-end gap mbs-4">
      <%# Using the simpler `params[:q].present?` check is cleaner %>
      <%= link_to "Reset All", follow_up_tasks_path, class: "btn" if params[:q].present? %>
      <%= f.submit "Search", class: "btn btn--primary" %>
    </div>
<% end %>